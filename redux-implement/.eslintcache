[{"/Users/itsuki/learn/learn-js/redux-implement/src/reportWebVitals.js":"1","/Users/itsuki/learn/learn-js/redux-implement/src/redux/index.js":"2","/Users/itsuki/learn/learn-js/redux-implement/src/App.js":"3","/Users/itsuki/learn/learn-js/redux-implement/src/components/connect/index.jsx":"4","/Users/itsuki/learn/learn-js/redux-implement/src/components/Provider/index.jsx":"5","/Users/itsuki/learn/learn-js/redux-implement/src/index.js":"6"},{"size":362,"mtime":1611282490114,"results":"7","hashOfConfig":"8"},{"size":1651,"mtime":1611297769073,"results":"9","hashOfConfig":"8"},{"size":792,"mtime":1611287918830,"results":"10","hashOfConfig":"8"},{"size":673,"mtime":1611286852331,"results":"11","hashOfConfig":"8"},{"size":250,"mtime":1611287086870,"results":"12","hashOfConfig":"8"},{"size":614,"mtime":1611287081677,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"155e146",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/itsuki/learn/learn-js/redux-implement/src/reportWebVitals.js",[],"/Users/itsuki/learn/learn-js/redux-implement/src/redux/index.js",["27"],"/Users/itsuki/learn/learn-js/redux-implement/src/App.js",[],"/Users/itsuki/learn/learn-js/redux-implement/src/components/connect/index.jsx",["28"],"import React, { useContext, useEffect, useState } from 'react'\nimport { StoreProvider } from '../Provider'\n\nconst connect = (mapStateToProps, mapDispatchToProps) => Component => {\n  const Connect = props => {\n    const { store } = useContext(StoreProvider)\n    const [, forceUpdate] = useState({})\n    const handleStoreHandle = () => forceUpdate({})\n\n    console.log('hook store:', store)\n    useEffect(() => {\n      store.subscribe(handleStoreHandle)\n    }, [])\n\n    return (\n      <Component\n        {...props}\n        {...mapDispatchToProps(store?.dispatch)}\n        {...mapStateToProps(store?.getState())}\n      />\n    )\n  }\n\n  return Connect\n}\n\nexport default connect\n","/Users/itsuki/learn/learn-js/redux-implement/src/components/Provider/index.jsx",[],"/Users/itsuki/learn/learn-js/redux-implement/src/index.js",[],{"ruleId":"29","severity":1,"message":"30","line":62,"column":60,"nodeType":"31","messageId":"32","endLine":62,"endColumn":65},{"ruleId":"33","severity":1,"message":"34","line":13,"column":8,"nodeType":"35","endLine":13,"endColumn":10,"suggestions":"36"},"no-use-before-define","'store' was used before it was defined.","Identifier","usedBeforeDefined","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'store'. Either include it or remove the dependency array.","ArrayExpression",["37"],{"desc":"38","fix":"39"},"Update the dependencies array to be: [store]",{"range":"40","text":"41"},[459,461],"[store]"]